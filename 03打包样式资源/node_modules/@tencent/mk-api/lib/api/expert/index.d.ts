import { SearchWithPaginationParams } from '../../types';
export declare const MkExpertApi: {
    search: ((params?: SearchWithPaginationParams | undefined) => Promise<import("axios").AxiosResponse<{
        id: number;
        skills: string;
        tags: string;
        description: string;
        user: {
            title: string;
            post: string;
            id: number;
            name: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            org: string;
            createdAt: string;
        };
        answer: {
            id: number;
            updatedAt: number;
            problemId: number;
            contentPlain: string;
        };
    }[]> & {
        paging: {
            page: number;
            total: number;
            perPage: number;
        };
    }>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (params?: SearchWithPaginationParams | undefined) => Promise<import("axios").AxiosResponse<{
                id: number;
                skills: string;
                tags: string;
                description: string;
                user: {
                    title: string;
                    post: string;
                    id: number;
                    name: string;
                    stats: {
                        score: number;
                        scoreLevel: string;
                    };
                    curStar: boolean;
                    avatar: string;
                    username: string;
                    sex: string;
                    org: string;
                    createdAt: string;
                };
                answer: {
                    id: number;
                    updatedAt: number;
                    problemId: number;
                    contentPlain: string;
                };
            }[]> & {
                paging: {
                    page: number;
                    total: number;
                    perPage: number;
                };
            }>;
        };
    };
};

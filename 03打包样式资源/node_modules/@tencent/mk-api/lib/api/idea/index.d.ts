interface CreateIdeaCommonParams {
    coterieId?: number;
    content: string;
    sourceName?: string;
    sourceId?: number;
    sourceType?: string;
    sourceSubName?: string;
    sourceSubId?: number;
    sourceSubType?: string;
}
interface CreateIdeaImageParams extends CreateIdeaCommonParams {
    imageUrls: string;
    type: 'image';
}
interface CreateIdeaTextParams extends CreateIdeaCommonParams {
    type: 'text';
}
interface CreateIdeaLinkParams extends CreateIdeaCommonParams {
    type: 'link';
    url: string;
    title: string;
    description: string;
    logo: string;
}
interface CreateIdeaVoteParams extends CreateIdeaCommonParams {
    type: 'vote';
    voteItem: string[];
    voteTitle: string;
    voteType: 'single' | 'multi';
}
interface CreateIdeaVideoParams extends CreateIdeaCommonParams {
    type: 'video';
    videoUrl: string;
}
interface IdeaNoteParams {
    description: string;
    parentId: number;
}
export declare const MkIdeaApi: {
    get: ((ideaId: number) => Promise<import("axios").AxiosResponse<{
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
        curStar: boolean;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        vote: {
            id: number;
            title: string;
            type: string;
            totalCount: number;
            totalUserCount: number;
            curUserVote: boolean;
            voteItems: {
                id: number;
                voteId: number;
                content: string;
                voteCount: number;
                curUserVote: boolean;
                voteUsernames: string;
            }[];
        };
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<{
                id: number;
                type: "link" | "video" | "image" | "text" | "vote";
                readCount: number;
                starCount: number;
                noteCount: number;
                shareCount: number;
                agreeCount: number;
                agreeUsernames: string;
                disagreeCount: number;
                linkUrl: string;
                videoUrl: string;
                videoState: 0 | 2 | 1;
                linkContent: {
                    url: string;
                    title: string;
                    description: string;
                    logo: string;
                };
                imageUrls: string;
                source: string;
                sourceType: string;
                sourceId: number;
                sourceName: string;
                sourceSubType: string;
                sourceSubId: number;
                sourceSubName: string;
                coteries: {
                    id: number;
                    name: string;
                    avatar: string;
                }[];
                userId: number;
                username: string;
                content: string;
                contentMd: string;
                createdAt: number;
                updatedAt: number;
                curStar: boolean;
                author: {
                    title: string;
                    post: string;
                    id: number;
                    name: string;
                    curStar: boolean;
                    avatar: string;
                    username: string;
                    sex: string;
                    bg: string;
                    org: string;
                    anonymous: boolean;
                    createdAt: string;
                    stats: {
                        score: number;
                        scoreLevel: string;
                    };
                };
                vote: {
                    id: number;
                    title: string;
                    type: string;
                    totalCount: number;
                    totalUserCount: number;
                    curUserVote: boolean;
                    voteItems: {
                        id: number;
                        voteId: number;
                        content: string;
                        voteCount: number;
                        curUserVote: boolean;
                        voteUsernames: string;
                    }[];
                };
            }>>;
        };
    };
    deleteIdea: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    create: ((ideaForm: CreateIdeaImageParams | CreateIdeaTextParams | CreateIdeaLinkParams | CreateIdeaVideoParams | CreateIdeaVoteParams) => Promise<import("axios").AxiosResponse<{
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaForm: CreateIdeaImageParams | CreateIdeaTextParams | CreateIdeaLinkParams | CreateIdeaVideoParams | CreateIdeaVoteParams) => Promise<import("axios").AxiosResponse<{
                id: number;
                type: "link" | "video" | "image" | "text" | "vote";
                readCount: number;
                starCount: number;
                noteCount: number;
                shareCount: number;
                agreeCount: number;
                agreeUsernames: string;
                disagreeCount: number;
                linkUrl: string;
                videoUrl: string;
                videoState: 0 | 2 | 1;
                linkContent: {
                    url: string;
                    title: string;
                    description: string;
                    logo: string;
                };
                imageUrls: string;
                source: string;
                sourceType: string;
                sourceId: number;
                sourceName: string;
                sourceSubType: string;
                sourceSubId: number;
                sourceSubName: string;
                coteries: {
                    id: number;
                    name: string;
                    avatar: string;
                }[];
                userId: number;
                username: string;
                content: string;
                contentMd: string;
                createdAt: number;
                updatedAt: number;
            }>>;
        };
    };
    star: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    unStar: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    share: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    agree: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    unAgree: ((ideaId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    getNote: ((ideaId: number) => Promise<import("axios").AxiosResponse<{
        note: {
            author: {
                title: string;
                post: string;
                id: number;
                name: string;
                curStar: boolean;
                avatar: string;
                username: string;
                sex: string;
                bg: string;
                org: string;
                anonymous: boolean;
                createdAt: string;
                stats: {
                    score: number;
                    scoreLevel: string;
                };
            };
            source: string;
            id: number;
            parentId: number;
            userId: number;
            username: string;
            createdAt: number;
            updatedAt: number;
            linkableId: number;
            linkableType: string;
            rootableId: number;
            rootableType: string;
            content: string;
            contentMd: string;
            agreeCount: number;
            agreeUsernames: string;
        };
        children: {
            author: {
                title: string;
                post: string;
                id: number;
                name: string;
                curStar: boolean;
                avatar: string;
                username: string;
                sex: string;
                bg: string;
                org: string;
                anonymous: boolean;
                createdAt: string;
                stats: {
                    score: number;
                    scoreLevel: string;
                };
            };
            source: string;
            id: number;
            parentId: number;
            userId: number;
            username: string;
            createdAt: number;
            updatedAt: number;
            linkableId: number;
            linkableType: string;
            rootableId: number;
            rootableType: string;
            content: string;
            contentMd: string;
            agreeCount: number;
            agreeUsernames: string;
        }[]; /**
         * 关注想法
         *
         * @param {number} ideaId
         * @returns
         */
    }[]> & {
        paging: {
            page: number;
            total: number;
            perPage: number;
        };
    }>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number) => Promise<import("axios").AxiosResponse<{
                note: {
                    author: {
                        title: string;
                        post: string;
                        id: number;
                        name: string;
                        curStar: boolean;
                        avatar: string;
                        username: string;
                        sex: string;
                        bg: string;
                        org: string;
                        anonymous: boolean;
                        createdAt: string;
                        stats: {
                            score: number;
                            scoreLevel: string;
                        };
                    };
                    source: string;
                    id: number;
                    parentId: number;
                    userId: number;
                    username: string;
                    createdAt: number;
                    updatedAt: number;
                    linkableId: number;
                    linkableType: string;
                    rootableId: number;
                    rootableType: string;
                    content: string;
                    contentMd: string;
                    agreeCount: number;
                    agreeUsernames: string;
                };
                children: {
                    author: {
                        title: string;
                        post: string;
                        id: number;
                        name: string;
                        curStar: boolean;
                        avatar: string;
                        username: string;
                        sex: string;
                        bg: string;
                        org: string;
                        anonymous: boolean;
                        createdAt: string;
                        stats: {
                            score: number;
                            scoreLevel: string;
                        };
                    };
                    source: string;
                    id: number;
                    parentId: number;
                    userId: number;
                    username: string;
                    createdAt: number;
                    updatedAt: number;
                    linkableId: number;
                    linkableType: string;
                    rootableId: number;
                    rootableType: string;
                    content: string;
                    contentMd: string;
                    agreeCount: number;
                    agreeUsernames: string;
                }[]; /**
                 * 关注想法
                 *
                 * @param {number} ideaId
                 * @returns
                 */
            }[]> & {
                paging: {
                    page: number;
                    total: number;
                    perPage: number;
                };
            }>;
        };
    };
    agreeNote: ((ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    unAgreeNote: ((ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<null>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<null>>;
        };
    };
    createNote: ((ideaId: number, params: IdeaNoteParams) => Promise<import("axios").AxiosResponse<{
        id: number;
        parentId: number;
        source: string;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, params: IdeaNoteParams) => Promise<import("axios").AxiosResponse<{
                id: number;
                parentId: number;
                source: string;
                userId: number;
                username: string;
                createdAt: number;
                updatedAt: number;
                linkableId: number;
                linkableType: string;
                rootableId: number;
                rootableType: string;
                content: string;
                contentMd: string;
                agreeCount: number;
                agreeUsernames: string;
            }>>;
        };
    };
    updateNote: ((ideaId: number, noteId: number, noteForm: IdeaNoteParams) => Promise<import("axios").AxiosResponse<{
        id: number;
        parentId: number;
        source: string;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, noteId: number, noteForm: IdeaNoteParams) => Promise<import("axios").AxiosResponse<{
                id: number;
                parentId: number;
                source: string;
                userId: number;
                username: string;
                createdAt: number;
                updatedAt: number;
                linkableId: number;
                linkableType: string;
                rootableId: number;
                rootableType: string;
                content: string;
                contentMd: string;
                agreeCount: number;
                agreeUsernames: string;
            }>>;
        };
    };
    deleteNote: ((ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<void>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, noteId: number) => Promise<import("axios").AxiosResponse<void>>;
        };
    };
    setStick: ((ideaId: number, params: {
        stick: boolean;
    }) => Promise<import("axios").AxiosResponse<void>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (ideaId: number, params: {
                stick: boolean;
            }) => Promise<import("axios").AxiosResponse<void>>;
        };
    };
    vote: ((voteId: number, { voteItemIds }: {
        voteItemIds: number[];
    }) => Promise<import("axios").AxiosResponse<{
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (voteId: number, { voteItemIds }: {
                voteItemIds: number[];
            }) => Promise<import("axios").AxiosResponse<{
                id: number;
                title: string;
                type: string;
                totalCount: number;
                totalUserCount: number;
                curUserVote: boolean;
                voteItems: {
                    id: number;
                    voteId: number;
                    content: string;
                    voteCount: number;
                    curUserVote: boolean;
                    voteUsernames: string;
                }[];
            }>>;
        };
    };
    unVote: ((voteId: number) => Promise<import("axios").AxiosResponse<{
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (voteId: number) => Promise<import("axios").AxiosResponse<{
                id: number;
                title: string;
                type: string;
                totalCount: number;
                totalUserCount: number;
                curUserVote: boolean;
                voteItems: {
                    id: number;
                    voteId: number;
                    content: string;
                    voteCount: number;
                    curUserVote: boolean;
                    voteUsernames: string;
                }[];
            }>>;
        };
    };
};
export {};

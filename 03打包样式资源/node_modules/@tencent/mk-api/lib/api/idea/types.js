import { NumberDTO, StringDTO, BaseUser, Content, BaseTime, BooleanDTO } from '../../define/base';
import { TypeWrapper } from '../../http';
import { UserShortInfo } from '../user/types';
import { NoteBase } from '../../define/note';
import { CoterieBase } from '../coteries/baseType';
import { ShareLink } from '../tool/types';
import { constant, extend, pick } from '../../define/helper';
import { Vote } from '../../define/vote';
export const IdeaBase = extend({
    id: NumberDTO,
    type: constant('text', 'link', 'image', 'vote', 'video'),
    readCount: NumberDTO,
    starCount: NumberDTO,
    noteCount: NumberDTO,
    shareCount: NumberDTO,
    agreeCount: NumberDTO,
    agreeUsernames: StringDTO,
    disagreeCount: NumberDTO,
    linkUrl: StringDTO,
    videoUrl: StringDTO,
    videoState: constant(0, 1, 2),
    linkContent: ShareLink,
    imageUrls: StringDTO,
    source: StringDTO,
    sourceType: StringDTO,
    sourceId: NumberDTO,
    sourceName: StringDTO,
    sourceSubType: StringDTO,
    sourceSubId: NumberDTO,
    sourceSubName: StringDTO,
    coteries: [pick(CoterieBase, ['id', 'avatar', 'name'])],
}, BaseUser, Content, BaseTime);
export const IdeaBaseHttp = TypeWrapper(IdeaBase);
export const Idea = extend(IdeaBase, {
    curStar: BooleanDTO,
    author: UserShortInfo,
    vote: Vote,
});
// 只有动态广场需要sticked字段
export const IdeaWithSticked = extend(Idea, {
    sticked: BooleanDTO,
});
export const IdeaWithStickedHttp = TypeWrapper(IdeaWithSticked);
// 话题详情页 置顶
export const IdeaWithSubjectSticked = extend(Idea, {
    curSubjectStick: BooleanDTO,
});
export const IdeaWithSubjectStickedHttp = TypeWrapper(IdeaWithSubjectSticked);
export const IdeaHttp = TypeWrapper(Idea);
export const IdeaNote = extend({
    author: UserShortInfo,
    source: StringDTO,
}, NoteBase, BaseTime);
export const IdeaNoteHttp = TypeWrapper(IdeaNote);
export const IdeaNoteWithReply = {
    note: IdeaNote,
    children: [IdeaNote],
};
export const IdeaNoteWithReplyHttp = TypeWrapper(IdeaNoteWithReply);

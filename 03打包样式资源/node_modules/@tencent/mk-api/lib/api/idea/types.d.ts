export declare const IdeaBase: {
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
};
export declare const IdeaBaseHttp: import("../../http").TypeHTTP<{
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
}>;
export declare const Idea: {
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
};
export declare const IdeaWithSticked: {
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    sticked: boolean;
};
export declare const IdeaWithStickedHttp: import("../../http").TypeHTTP<{
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    sticked: boolean;
}>;
export declare const IdeaWithSubjectSticked: {
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    curSubjectStick: boolean;
};
export declare const IdeaWithSubjectStickedHttp: import("../../http").TypeHTTP<{
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    curSubjectStick: boolean;
}>;
export declare const IdeaHttp: import("../../http").TypeHTTP<{
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
}>;
export declare const IdeaNote: {
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    source: string;
    id: number;
    parentId: number;
    userId: number;
    username: string;
    createdAt: number;
    updatedAt: number;
    linkableId: number;
    linkableType: string;
    rootableId: number;
    rootableType: string;
    content: string;
    contentMd: string;
    agreeCount: number;
    agreeUsernames: string;
};
export declare const IdeaNoteHttp: import("../../http").TypeHTTP<{
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    source: string;
    id: number;
    parentId: number;
    userId: number;
    username: string;
    createdAt: number;
    updatedAt: number;
    linkableId: number;
    linkableType: string;
    rootableId: number;
    rootableType: string;
    content: string;
    contentMd: string;
    agreeCount: number;
    agreeUsernames: string;
}>;
export declare const IdeaNoteWithReply: {
    note: {
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        source: string;
        id: number;
        parentId: number;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    };
    children: {
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        source: string;
        id: number;
        parentId: number;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }[];
};
export declare const IdeaNoteWithReplyHttp: import("../../http").TypeHTTP<{
    note: {
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        source: string;
        id: number;
        parentId: number;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    };
    children: {
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        source: string;
        id: number;
        parentId: number;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }[];
}>;

import { Http } from '../../http';
import { IdeaHttp, IdeaNoteWithReplyHttp, IdeaBaseHttp } from './types';
import { VoteHttp } from '../../define/vote';
import { NoteBaseHttp } from '../../define/note';
import { injectAPIGroup } from '../../inject';
export const MkIdeaApi = injectAPIGroup({
    /**
     * 根据id获取想法信息
     *
     * @param {number} ideaId
     * @returns
     */
    get(ideaId) {
        return IdeaHttp.get(`/idea/${ideaId}`);
    },
    /**
     * 删除想法
     *
     * @param {number} ideaId
     * @returns
     */
    deleteIdea(ideaId) {
        return Http.delete(`/idea/${ideaId}`);
    },
    /**
     * 创建想法
     *
     * @param {(CreateIdeaImageParams
     *       | CreateIdeaTextParams
     *       | CreateIdeaLinkParams
     *       | CreateIdeaVideoParams
     *       | CreateIdeaVoteParams)} ideaForm
     * @returns
     */
    create(ideaForm) {
        return IdeaBaseHttp.post('/idea', ideaForm);
    },
    /**
     * 关注想法
     *
     * @param {number} ideaId
     * @returns
     */
    star(ideaId) {
        return Http.post(`/idea/${ideaId}/star`);
    },
    /**
     * 取消想法关注
     *
     * @param {number} ideaId
     * @returns
     */
    unStar(ideaId) {
        return Http.delete(`/idea/${ideaId}/star`);
    },
    /**
     * 分享想法
     *
     * @param {number} ideaId
     * @returns
     */
    share(ideaId) {
        return Http.post(`/idea/${ideaId}/share`);
    },
    /**
     * 想法点赞
     *
     * @param {number} ideaId
     * @returns
     */
    agree(ideaId) {
        return Http.post(`/idea/${ideaId}/agree`);
    },
    /**
     * 取消想法点赞
     *
     * @param {number} ideaId
     * @returns
     */
    unAgree(ideaId) {
        return Http.delete(`/idea/${ideaId}/agree`);
    },
    /**
     * 获取回复
     *
     * @param {number} ideaId
     * @returns
     */
    getNote(ideaId) {
        return IdeaNoteWithReplyHttp.list().get(`/idea/${ideaId}/notes`);
    },
    /**
     * 评论点赞
     *
     * @param {number} ideaId
     * @param {number} noteId
     * @param {number} noteId
     * @returns
     */
    agreeNote(ideaId, noteId) {
        return Http.post(`/idea/${ideaId}/note/${noteId}/agree`);
    },
    /**
     * 取消评论点赞
     *
     * @param {number} ideaId
     * @param {number} replyId
     * @param {number} noteId
     * @returns
     */
    unAgreeNote(ideaId, noteId) {
        return Http.delete(`/idea/${ideaId}/note/${noteId}/agree`);
    },
    /**
     * 创建回复
     *
     * @param {number} ideaId
     * @param {IdeaNoteParams} params
     * @returns
     */
    createNote(ideaId, params) {
        return NoteBaseHttp.post(`/idea/${ideaId}/note`, params);
    },
    /**
     * 更新回复
     *
     * @param {number} ideaId
     * @param {number} noteId
     * @param {IdeaNoteParams} noteForm
     * @returns
     */
    updateNote(ideaId, noteId, noteForm) {
        return NoteBaseHttp.put(`/idea/${ideaId}/note/${noteId}`, noteForm);
    },
    /**
     * 删除回复
     *
     * @param {number} ideaId
     * @param {number} noteId
     * @returns
     */
    deleteNote(ideaId, noteId) {
        return Http.delete(`/idea/${ideaId}/note/${noteId}`);
    },
    /**
     * 设置动态置顶/不置顶
     *
     * @param {number} ideaId
     * @param {{
     *       stick: boolean
     *     }} params 是否置顶
     * @returns
     */
    setStick(ideaId, params) {
        return Http.post(`/idea/${ideaId}/stick`, null, {
            params,
        });
    },
    /**
     * 投票（action）
     *
     * @param {number} voteId
     * @param {{ voteItemIds: number[] }}
     */
    vote(voteId, { voteItemIds }) {
        return VoteHttp.post(`/vote/${voteId}`, null, {
            params: {
                vote_item_ids: voteItemIds,
            },
        });
    },
    /**
     * 投票（action）
     *
     * @param {number} voteId
     */
    unVote(voteId) {
        return VoteHttp.delete(`/vote/${voteId}`);
    },
});

export declare type ContestType = 'ai_innovation' | 'programming' | 'innovation_app' | 'tech_selection';
export interface ContestBasicForm {
    admins?: string[];
    title: string;
    description: string;
    type: ContestType;
    expireAt: string;
    organizers: string;
    teamMemberLimit: number;
    organizerLogo: string;
    organizerRemark: string;
    roundCount: number;
    roundNames: string[];
}
export declare type ContestStatus = 'block' | 'active' | 'finish';
export interface ContestSubmitSettingForm {
    type: 'taiji' | 'text' | 'attachment' | 'git';
    limit: number;
    remark?: string;
    format?: string;
    startAt?: string;
    expiredAt?: string;
    timeFollows?: boolean;
    usernames?: string;
}
export declare type SubmitForm = {
    content: string;
};
export interface ContestVoteForm {
    voteFormList: {
        id?: number;
        title: string;
        type: 'radio' | 'checkbox';
        isNew?: boolean;
        isDelete?: boolean;
        order?: number;
        voteItem: {
            id?: number;
            voteId?: number;
            content: string;
            order?: number;
            isNew?: boolean;
            isDelete?: boolean;
        }[];
    }[];
}
export interface ContestVoteSubmitForm {
    voteFormList: {
        id: number;
        voteItemIds: number[];
    };
}
export declare type ContestRankType = 1 | 2 | 3;
export declare type ContestRankSortType = 1 | 2;
export interface UserContestScoreStats {
    rank: number;
    score: number;
}
export declare type SeparatelyNoticeContent = {
    username: string;
    content: string;
}[];

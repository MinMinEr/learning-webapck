import { Http } from '../../http';
import { HttpBaseConfig } from '../../base';
import { ShareLinkHttp, TaijiHTTP, GitHTTP } from './types';
import { injectAPIGroup } from '../../inject';
export const MkToolApi = injectAPIGroup({
    /**
     * 解析markdown
     * @param {{ content: string}} {content}
     * @returns
     */
    preview({ content }) {
        return Http.post('/markdown/preview', {
            content,
        });
    },
    /**
     * 上传文件
     *
     * @param {FormData} formData
     * @returns
     */
    upload(formData) {
        const { UPLOAD_BASE } = HttpBaseConfig;
        return Http.post(UPLOAD_BASE, formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
            },
        });
    },
    /**
     * 解析并爬取链接内容
     *
     * @param {{ link: string }} params
     * @returns
     */
    parseWebpage(params) {
        return ShareLinkHttp.get('/share_link', {
            params,
        });
    },
    /**
     * 获取太极项目
     * @deprecated
     * @param {number} id
     * @returns
     */
    getTaiji(id) {
        console.error('开源广场即将下线, 如有调用相关API请尽快删除');
        return TaijiHTTP.get(`/tesla/algorithm/${id}`);
    },
    /**
     * 获取工蜂git项目详情
     * @deprecated
     * @param {{ namespace: string, path: string}} params
     * @returns
     */
    getGit(params) {
        console.error('开源广场即将下线, 如有调用相关API请尽快删除');
        return GitHTTP.get('/project/git', {
            params: {
                namespaceFullPath: params.namespace,
                projectPath: params.path,
            },
        });
    },
});

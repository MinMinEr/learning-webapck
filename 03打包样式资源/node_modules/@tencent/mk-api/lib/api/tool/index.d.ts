export declare const MkToolApi: {
    preview: (({ content }: {
        content: string;
    }) => Promise<import("axios").AxiosResponse<string>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: ({ content }: {
                content: string;
            }) => Promise<import("axios").AxiosResponse<string>>;
        };
    };
    upload: ((formData: FormData) => Promise<import("axios").AxiosResponse<any>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (formData: FormData) => Promise<import("axios").AxiosResponse<any>>;
        };
    };
    parseWebpage: ((params: {
        link: string;
    }) => Promise<import("axios").AxiosResponse<{
        url: string;
        title: string;
        description: string;
        logo: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (params: {
                link: string;
            }) => Promise<import("axios").AxiosResponse<{
                url: string;
                title: string;
                description: string;
                logo: string;
            }>>;
        };
    };
    getTaiji: ((id: number) => Promise<import("axios").AxiosResponse<{
        id: number;
        name: string;
        favoriteCount: number;
        likeCount: number;
        commentCount: number;
        demoName: string;
        demoUrl: string;
        detail: string;
        avatar: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (id: number) => Promise<import("axios").AxiosResponse<{
                id: number;
                name: string;
                favoriteCount: number;
                likeCount: number;
                commentCount: number;
                demoName: string;
                demoUrl: string;
                detail: string;
                avatar: string;
            }>>;
        };
    };
    getGit: ((params: {
        namespace: string;
        path: string;
    }) => Promise<import("axios").AxiosResponse<{
        name: string;
        path: string;
        sourceId: string;
        namespaceName: string;
        namespacePath: string;
        starCount: number;
        watchCount: number;
        viewCount: number;
        avatar: string;
        description: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (params: {
                namespace: string;
                path: string;
            }) => Promise<import("axios").AxiosResponse<{
                name: string;
                path: string;
                sourceId: string;
                namespaceName: string;
                namespacePath: string;
                starCount: number;
                watchCount: number;
                viewCount: number;
                avatar: string;
                description: string;
            }>>;
        };
    };
};

export declare const SimpleCoteries: {
    id: number;
    name: string;
    avatar: string;
};
export declare const CoterieConfigHttp: import("../../http").TypeHTTP<{
    id: number;
    tags: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    showInHomePage: boolean;
    projects: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
        extend: string;
    }[];
    oteams: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    homepageMd: string;
    homepage: string;
    monthlyHonors: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    msgEnabled: boolean;
    tapdEnabled: boolean;
}>;
export declare const CoterieBaseHttp: import("../../http").TypeHTTP<{
    id: number;
    name: string;
    avatar: string;
    status: string;
    v: string;
    categories: {
        id: number;
        name: string;
    }[];
    description: string;
    stats: {
        ideaCount: number;
        problemCount: number;
        memberCount: number;
        lastWeekWeight: number;
        lastWeekRanking: number;
        lastWeekPv: number;
        pv: number;
    };
    createdAt: number;
    updatedAt: number;
}>;
export declare const CoterieDetailHttp: import("../../http").TypeHTTP<{
    id: number;
    name: string;
    avatar: string;
    status: string;
    v: string;
    categories: {
        id: number;
        name: string;
    }[];
    description: string;
    stats: {
        ideaCount: number;
        problemCount: number;
        articleCount: number;
        memberCount: number;
        lastWeekWeight: number;
        lastWeekRanking: number;
        lastWeekPv: number;
        pv: number;
        answeredProblemCount: number;
    };
    createdAt: number;
    updatedAt: number;
    curJoin: boolean;
    curStar: boolean;
    config: {
        projects: {
            id: number;
            name: string;
            value: string;
            orderBy: number;
            extend: string;
        }[];
        tags: {
            id: number;
            name: string;
            value: string;
            orderBy: number;
        }[];
        oteams: {
            id: number;
            name: string;
            value: string;
            orderBy: number;
        }[];
        showInHomePage: boolean;
        homepageMd: string;
        homepage: string;
        monthlyHonors: {
            id: number;
            name: string;
            value: string;
            orderBy: number;
        }[];
        msgEnabled: boolean;
        tapdEnabled: boolean;
    };
}>;
export declare const CoteriesListHttp: import("../../http").TypeHTTP<{
    id: number;
    name: string;
    stats: {
        ideaCount: number;
        problemCount: number;
        articleCount: number;
        memberCount: number;
        lastWeekWeight: number;
        lastWeekRanking: number;
        lastWeekPv: number;
        pv: number;
        answeredProblemCount: number;
    };
    curStar: boolean;
    avatar: string;
    createdAt: number;
    description: string;
    v: string;
    curJoin: boolean;
}>;
export declare const AdminCoteries: {
    id: number;
    name: string;
    avatar: string;
    config: {
        tapdEnabled: boolean;
    };
};
export declare const AdminCoteriesHttp: import("../../http").TypeHTTP<{
    id: number;
    name: string;
    avatar: string;
    config: {
        tapdEnabled: boolean;
    };
}>;
export declare const CoterieMember: {
    id: number;
    accessLevel: number;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    ideaCount: number;
    answerCount: number;
    createdAt: number;
    answerAgreeCount: number;
    problemCount: number;
    articleCount: number;
    articleAgreeCount: number;
    userId: number;
    username: string;
};
export declare const CoterieMemberHttp: import("../../http").TypeHTTP<{
    id: number;
    accessLevel: number;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    ideaCount: number;
    answerCount: number;
    createdAt: number;
    answerAgreeCount: number;
    problemCount: number;
    articleCount: number;
    articleAgreeCount: number;
    userId: number;
    username: string;
}>;
export declare const CoterieIdea: {
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    ideaLink?: {
        sticked: boolean;
    } | undefined;
};
export declare const CoterieIdeaHttp: import("../../http").TypeHTTP<{
    id: number;
    type: "link" | "video" | "image" | "text" | "vote";
    readCount: number;
    starCount: number;
    noteCount: number;
    shareCount: number;
    agreeCount: number;
    agreeUsernames: string;
    disagreeCount: number;
    linkUrl: string;
    videoUrl: string;
    videoState: 0 | 2 | 1;
    linkContent: {
        url: string;
        title: string;
        description: string;
        logo: string;
    };
    imageUrls: string;
    source: string;
    sourceType: string;
    sourceId: number;
    sourceName: string;
    sourceSubType: string;
    sourceSubId: number;
    sourceSubName: string;
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    userId: number;
    username: string;
    content: string;
    contentMd: string;
    createdAt: number;
    updatedAt: number;
    curStar: boolean;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    vote: {
        id: number;
        title: string;
        type: string;
        totalCount: number;
        totalUserCount: number;
        curUserVote: boolean;
        voteItems: {
            id: number;
            voteId: number;
            content: string;
            voteCount: number;
            curUserVote: boolean;
            voteUsernames: string;
        }[];
    };
    ideaLink?: {
        sticked: boolean;
    } | undefined;
}>;
export declare const CoterieQuestion: {
    problemLinks?: {
        sticked: boolean;
        classificationName: string;
    }[] | undefined;
    title: string;
    id: number;
    coteries: {
        id: number;
        name: string;
        stats: {
            ideaCount: number;
            problemCount: number;
            memberCount: number;
            lastWeekWeight: number;
            lastWeekRanking: number;
            lastWeekPv: number;
            pv: number;
        };
        avatar: string;
    }[];
    type: string;
    createdAt: number;
    answerCount: number;
    agreeCount: number;
    updatedAt: number;
    titleMd: string;
    agreeUsernames: string;
    likeCount: number;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    readCount: number;
    imageField: string;
    videoField: string;
    tags: {
        id: number;
        name: string;
    }[];
    starCount: number;
    resolved: boolean;
    replyType: string;
};
export declare const CoterieQuestionHttp: import("../../http").TypeHTTP<{
    problemLinks?: {
        sticked: boolean;
        classificationName: string;
    }[] | undefined;
    title: string;
    id: number;
    coteries: {
        id: number;
        name: string;
        stats: {
            ideaCount: number;
            problemCount: number;
            memberCount: number;
            lastWeekWeight: number;
            lastWeekRanking: number;
            lastWeekPv: number;
            pv: number;
        };
        avatar: string;
    }[];
    type: string;
    createdAt: number;
    answerCount: number;
    agreeCount: number;
    updatedAt: number;
    titleMd: string;
    agreeUsernames: string;
    likeCount: number;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    readCount: number;
    imageField: string;
    videoField: string;
    tags: {
        id: number;
        name: string;
    }[];
    starCount: number;
    resolved: boolean;
    replyType: string;
}>;
export declare const CoterieOutbox: {
    id: number;
    opType: number;
    rootableType: "problem";
    linkableType: "problem";
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "idea";
    linkableType: "idea";
    related: {
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
        curStar: boolean;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        vote: {
            id: number;
            title: string;
            type: string;
            totalCount: number;
            totalUserCount: number;
            curUserVote: boolean;
            voteItems: {
                id: number;
                voteId: number;
                content: string;
                voteCount: number;
                curUserVote: boolean;
                voteUsernames: string;
            }[];
        };
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "article";
    linkableType: "article";
    related: {
        title: string;
        id: number;
        likeUsers: string;
        noteCount: number;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
};
export declare const CoterieOutboxHttp: import("../../http").TypeHTTP<{
    id: number;
    opType: number;
    rootableType: "problem";
    linkableType: "problem";
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "idea";
    linkableType: "idea";
    related: {
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
        curStar: boolean;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        vote: {
            id: number;
            title: string;
            type: string;
            totalCount: number;
            totalUserCount: number;
            curUserVote: boolean;
            voteItems: {
                id: number;
                voteId: number;
                content: string;
                voteCount: number;
                curUserVote: boolean;
                voteUsernames: string;
            }[];
        };
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "article";
    linkableType: "article";
    related: {
        title: string;
        id: number;
        likeUsers: string;
        noteCount: number;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
}>;
export declare const CoterieOutboxWithStick: {
    id: number;
    opType: number;
    rootableType: "problem";
    linkableType: "problem";
    sticked: boolean;
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "idea";
    linkableType: "idea";
    sticked: boolean;
    related: {
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
        curStar: boolean;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        vote: {
            id: number;
            title: string;
            type: string;
            totalCount: number;
            totalUserCount: number;
            curUserVote: boolean;
            voteItems: {
                id: number;
                voteId: number;
                content: string;
                voteCount: number;
                curUserVote: boolean;
                voteUsernames: string;
            }[];
        };
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "article";
    linkableType: "article";
    sticked: boolean;
    related: {
        title: string;
        id: number;
        likeUsers: string;
        noteCount: number;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
};
export declare const CoterieOutboxWithStickHttp: import("../../http").TypeHTTP<{
    id: number;
    opType: number;
    rootableType: "problem";
    linkableType: "problem";
    sticked: boolean;
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "idea";
    linkableType: "idea";
    sticked: boolean;
    related: {
        id: number;
        type: "link" | "video" | "image" | "text" | "vote";
        readCount: number;
        starCount: number;
        noteCount: number;
        shareCount: number;
        agreeCount: number;
        agreeUsernames: string;
        disagreeCount: number;
        linkUrl: string;
        videoUrl: string;
        videoState: 0 | 2 | 1;
        linkContent: {
            url: string;
            title: string;
            description: string;
            logo: string;
        };
        imageUrls: string;
        source: string;
        sourceType: string;
        sourceId: number;
        sourceName: string;
        sourceSubType: string;
        sourceSubId: number;
        sourceSubName: string;
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        userId: number;
        username: string;
        content: string;
        contentMd: string;
        createdAt: number;
        updatedAt: number;
        curStar: boolean;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        vote: {
            id: number;
            title: string;
            type: string;
            totalCount: number;
            totalUserCount: number;
            curUserVote: boolean;
            voteItems: {
                id: number;
                voteId: number;
                content: string;
                voteCount: number;
                curUserVote: boolean;
                voteUsernames: string;
            }[];
        };
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
} | {
    id: number;
    opType: number;
    rootableType: "article";
    linkableType: "article";
    sticked: boolean;
    related: {
        title: string;
        id: number;
        likeUsers: string;
        noteCount: number;
    };
    coterie: {
        id: number;
        name: string;
        avatar: string;
    };
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    createdAt: number;
}>;
export declare const CoterieExpert: {
    id: number;
    description: string;
    user: {
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        username: string;
        org: string;
    };
    coteries: {
        id: number;
        name: string;
        avatar: string;
    }[];
    createdAt: number;
    updatedAt: number;
};
export declare const CoterieExpertAdvert: {
    related: {
        id: number;
        description: string;
        user: {
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            username: string;
            org: string;
        };
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        createdAt: number;
        updatedAt: number;
    };
    id: string;
    type: string;
    url: string;
    title: string;
    banner: string;
    data1: string;
    data2: string;
    createdAt: string;
};
export declare const CoterieExpertAdvertHttp: import("../../http").TypeHTTP<{
    related: {
        id: number;
        description: string;
        user: {
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            username: string;
            org: string;
        };
        coteries: {
            id: number;
            name: string;
            avatar: string;
        }[];
        createdAt: number;
        updatedAt: number;
    };
    id: string;
    type: string;
    url: string;
    title: string;
    banner: string;
    data1: string;
    data2: string;
    createdAt: string;
}>;
export declare const CoterieMemberDataHttp: import("../../http").TypeHTTP<{
    username: string;
    bg: string;
    incrScore: number;
    org: string;
    accessLevel: number;
    createdAt: number;
    score: number;
    problemCount: number;
    answerCount: number;
    ideaCount: number;
    articleCount: number;
    problemAgreeCount: number;
    answerAgreeCount: number;
    articleAgreeCount: number;
}>;
export declare const CoterieFeedDataHttp: import("../../http").TypeHTTP<{
    createdAt: number;
    pvCount: number;
    uvCount: number;
    problemCount: number;
    answerCount: number;
    ideaCount: number;
    articleCount: number;
}>;
export declare const CoterieRobotHttp: import("../../http").TypeHTTP<{
    chat: {
        robotId: number;
        charId: string;
        chatName: string;
        chatType: string;
        members: string;
        memberTotal: number;
        receivePush: boolean;
        createdAt: number;
        updatedAt: number;
    };
    chatLink: {
        chatId: string;
        notifyNewProblem: boolean;
        notifyNewAnswer: boolean;
        notifyNewIdea: boolean;
        notifyNewArticle: boolean;
        dailyPush: boolean;
        tags: {
            id: number;
            name: string;
        }[];
        userId: number;
        username: string;
        linkableId: number;
        linkableType: string;
        createdAt: number;
        updatedAt: number;
    };
}>;
export declare const CoterieRobotLinkHttp: import("../../http").TypeHTTP<{
    chatId: string;
    notifyNewProblem: boolean;
    notifyNewAnswer: boolean;
    notifyNewIdea: boolean;
    notifyNewArticle: boolean;
    dailyPush: boolean;
    tags: {
        id: number;
        name: string;
    }[];
    userId: number;
    username: string;
    linkableId: number;
    linkableType: string;
    createdAt: number;
    updatedAt: number;
    coterie: {
        id: number;
        name: string;
    };
}>;
export declare const CoterieIndicator: {
    curWeek: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
    };
    lastMonth: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
        categoryRank: number;
        rank: number;
    };
    lastWeek: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
        categoryRank: number;
        rank: number;
    };
    total: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
    };
};
export declare const CoterieIndicatorHttp: import("../../http").TypeHTTP<{
    curWeek: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
    };
    lastMonth: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
        categoryRank: number;
        rank: number;
    };
    lastWeek: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
        categoryRank: number;
        rank: number;
    };
    total: {
        answerCount: number;
        answeredProblemCount: number;
        articleCount: number;
        ideaCount: number;
        memberCount: number;
        problemCount: number;
        pvCount: number;
    };
}>;
export declare const CoterieMsgHistoryHttp: import("../../http").TypeHTTP<{
    id: number;
    content: string;
    username: string;
    finalListCount: number;
    readCount: number;
    createdAt: number;
    state: number;
}>;
export declare const CoterieTapd: {
    id: number;
    coterieId: number;
    linkableName: string;
    linkableUrl: string;
    userId: number;
    username: string;
    createdAt: number;
    updatedAt: number;
    linkableId: number;
    linkableType: string;
};
export declare const CoterieTapdHttp: import("../../http").TypeHTTP<{
    id: number;
    coterieId: number;
    linkableName: string;
    linkableUrl: string;
    userId: number;
    username: string;
    createdAt: number;
    updatedAt: number;
    linkableId: number;
    linkableType: string;
}>;
export declare const CoterieExternalLink: {
    id: number;
    innerId: number;
    externalRootName: string;
    externalRootId: number;
    externalLinkId: number;
    externalLinkType: string;
    createdAt: number;
    userId: number;
    username: string;
};
export declare const CoterieProblemWithTapdLink: {
    problem: {
        id: number;
        createdAt: number;
        answerCount: number;
        titleMd: string;
        answeredAt: number;
    };
    link: {
        id: number;
        innerId: number;
        externalRootName: string;
        externalRootId: number;
        externalLinkId: number;
        externalLinkType: string;
        createdAt: number;
        userId: number;
        username: string;
    };
};
export declare const CoterieProblemWithTapdLinkHttp: import("../../http").TypeHTTP<{
    problem: {
        id: number;
        createdAt: number;
        answerCount: number;
        titleMd: string;
        answeredAt: number;
    };
    link: {
        id: number;
        innerId: number;
        externalRootName: string;
        externalRootId: number;
        externalLinkId: number;
        externalLinkType: string;
        createdAt: number;
        userId: number;
        username: string;
    };
}>;
export declare const CoterieContentCategory: {
    id: number;
    name: string;
    order: number;
    contentCount: number;
};
export declare const CoterieContentCategoryHttp: import("../../http").TypeHTTP<{
    id: number;
    name: string;
    order: number;
    contentCount: number;
}>;
export declare const CoterieArticle: {
    title: string;
    id: number;
    createdAt: number;
    updatedAt: number;
    likeCount: number;
    likeUsers: string;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
            answerCount: number;
            problemCount: number;
            agreeCount: number;
            articleCount: number;
        };
    };
    readCount: number;
    noteCount: number;
    imageField: string;
    tags: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    starCount: number;
    coterieId: number;
    sticked: boolean;
    coterieName: number;
    uuid: number;
    contestId: number;
    contestName: number;
    visibility: 10 | 5;
    detailMd: string;
    detail: string;
    articleLinks: {
        classificationName: string;
    };
};
export declare const CoterieArticleHttp: import("../../http").TypeHTTP<{
    title: string;
    id: number;
    createdAt: number;
    updatedAt: number;
    likeCount: number;
    likeUsers: string;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
            answerCount: number;
            problemCount: number;
            agreeCount: number;
            articleCount: number;
        };
    };
    readCount: number;
    noteCount: number;
    imageField: string;
    tags: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    starCount: number;
    coterieId: number;
    sticked: boolean;
    coterieName: number;
    uuid: number;
    contestId: number;
    contestName: number;
    visibility: 10 | 5;
    detailMd: string;
    detail: string;
    articleLinks: {
        classificationName: string;
    };
}>;

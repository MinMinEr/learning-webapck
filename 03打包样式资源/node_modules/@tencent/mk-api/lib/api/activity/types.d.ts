export declare const ActivityBaseHttp: import("../../http").TypeHTTP<{
    id: number;
    userId: number;
    username: string;
    type: "in" | "out";
    coterieId: number;
    coterieName: string;
    category: number;
    name: string;
    status: "running" | "finish" | "init";
    summary: string;
    banner: string;
    detail: string;
    organizers: string;
    reward: boolean;
    subjectId: number;
    subjectName: string;
    pv: number;
    startedAt: number;
    expiredAt: number;
    createdAt: number;
    updatedAt: number;
}>;
export declare const Activity: {
    detailMd: string;
    guests: string;
    template: string;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    answerCount: number;
    noteCount: number;
    id: number;
    userId: number;
    username: string;
    type: "in" | "out";
    coterieId: number;
    coterieName: string;
    category: number;
    name: string;
    status: "running" | "finish" | "init";
    summary: string;
    banner: string;
    detail: string;
    organizers: string;
    reward: boolean;
    subjectId: number;
    subjectName: string;
    pv: number;
    startedAt: number;
    expiredAt: number;
    createdAt: number;
    updatedAt: number;
};
export declare const ActivityHttp: import("../../http").TypeHTTP<{
    detailMd: string;
    guests: string;
    template: string;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    answerCount: number;
    noteCount: number;
    id: number;
    userId: number;
    username: string;
    type: "in" | "out";
    coterieId: number;
    coterieName: string;
    category: number;
    name: string;
    status: "running" | "finish" | "init";
    summary: string;
    banner: string;
    detail: string;
    organizers: string;
    reward: boolean;
    subjectId: number;
    subjectName: string;
    pv: number;
    startedAt: number;
    expiredAt: number;
    createdAt: number;
    updatedAt: number;
}>;
export declare const ActivityAdminQuestionListHttp: import("../../http").TypeHTTP<{
    hidden: boolean;
    sticked: boolean;
    title: string;
    id: number;
    coteries: {
        id: number;
        name: string;
        stats: {
            ideaCount: number;
            problemCount: number;
            memberCount: number;
            lastWeekWeight: number;
            lastWeekRanking: number;
            lastWeekPv: number;
            pv: number;
        };
        avatar: string;
    }[];
    type: string;
    createdAt: number;
    answerCount: number;
    agreeCount: number;
    updatedAt: number;
    titleMd: string;
    agreeUsernames: string;
    likeCount: number;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
        };
    };
    readCount: number;
    imageField: string;
    videoField: string;
    tags: {
        id: number;
        name: string;
    }[];
    starCount: number;
    resolved: boolean;
    replyType: string;
}>;
export declare const ActivityAdminArticleListHttp: import("../../http").TypeHTTP<{
    hidden: boolean;
    title: string;
    id: number;
    createdAt: number;
    updatedAt: number;
    likeCount: number;
    likeUsers: string;
    author: {
        title: string;
        post: string;
        id: number;
        name: string;
        curStar: boolean;
        avatar: string;
        username: string;
        sex: string;
        bg: string;
        org: string;
        anonymous: boolean;
        createdAt: string;
        stats: {
            score: number;
            scoreLevel: string;
            answerCount: number;
            problemCount: number;
            agreeCount: number;
            articleCount: number;
        };
    };
    readCount: number;
    noteCount: number;
    imageField: string;
    tags: {
        id: number;
        name: string;
        value: string;
        orderBy: number;
    }[];
    starCount: number;
    coterieId: number;
    sticked: boolean;
    coterieName: number;
    uuid: number;
    contestId: number;
    contestName: number;
    visibility: 10 | 5;
}>;

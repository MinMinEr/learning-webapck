import { Http } from '../../http';
import { BadgeHttp, BadgeBaseHttp } from './types';
import { injectAPIGroup } from '../../inject';
export const MkBadgeApi = injectAPIGroup({
    /**
     * 获取用户徽章
     * @param {string} username
     * @param {boolean} obtained
     * @returns
     */
    getUserBadge(username, params) {
        return BadgeHttp.get(`/user/${username}/badges/all`, {
            params,
        });
    },
    /**
     * 获取特定规则的最佳徽章
     *
     * @param {string} username
     * @param {{limit: number}} params
     * @returns
     */
    getUserBestBadge(username, params) {
        return BadgeHttp.list().get(`/user/${username}/badges/filter`, {
            params,
        });
    },
    /**
     *
     * @param {FullPaginationParams} [params]
     * @returns
     */
    getAllBadge(params) {
        return BadgeBaseHttp.list().get('/badges', {
            params: Object.assign({ limit: 9999 }, params),
        });
    },
    /**
     * 获取用户最近获得的徽章
     * @param {string} username
     * @returns
     */
    getUserNewestBadge(username) {
        return BadgeBaseHttp.get(`/user/${username}/badge/newest`);
    },
    /**
     * 获取用户即将获得的徽章
     *
     * @param {string} username
     * @returns
     */
    getUserNextBadge(username) {
        return BadgeHttp.get(`/user/${username}/badge/next`);
    },
    /**
     * 设置用户下一个即将获得的徽章
     * badgeId: 徽章id
     * badgeMissionId: 对应的徽章任务id
     * @param {string} username
     * @param {{badgeId: number, badgeMissionId: number}} params
     * @returns
     */
    setUserNextBadge(username, params) {
        return Http.post(`/user/${username}/badge/next`, {}, {
            params,
        });
    },
    /**
     * 获取用户的对应的徽章信息
     *
     * @param {string} username
     * @param {{ badgeIds: number[]}} params 所要获取的徽章id
     * @returns
     */
    getUserBadgeSelected(username, params) {
        return BadgeHttp.list().get(`/user/${username}/badges/selected`, {
            params: {
                badge_ids: params.badgeIds,
            },
        });
    },
});

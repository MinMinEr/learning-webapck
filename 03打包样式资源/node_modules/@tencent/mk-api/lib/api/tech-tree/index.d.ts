import { TreeNode } from './types';
export declare const MkTechTreeApi: {
    getTree: ((id: number) => Promise<import("axios").AxiosResponse<TreeNode[]>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (id: number) => Promise<import("axios").AxiosResponse<TreeNode[]>>;
        };
    };
    getTreeExperts: ((id: number) => Promise<import("axios").AxiosResponse<{
        related: {
            id: number;
            description: string;
            user: {
                post: string;
                id: number;
                name: string;
                curStar: boolean;
                username: string;
                org: string;
            };
            coteries: {
                id: number;
                name: string;
                avatar: string;
            }[];
            createdAt: number;
            updatedAt: number;
        };
        id: string;
        type: string;
        url: string;
        title: string;
        banner: string;
        data1: string;
        data2: string;
        createdAt: string;
    }[]> & {
        paging: {
            page: number;
            total: number;
            perPage: number;
        };
    }>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (id: number) => Promise<import("axios").AxiosResponse<{
                related: {
                    id: number;
                    description: string;
                    user: {
                        post: string;
                        id: number;
                        name: string;
                        curStar: boolean;
                        username: string;
                        org: string;
                    };
                    coteries: {
                        id: number;
                        name: string;
                        avatar: string;
                    }[];
                    createdAt: number;
                    updatedAt: number;
                };
                id: string;
                type: string;
                url: string;
                title: string;
                banner: string;
                data1: string;
                data2: string;
                createdAt: string;
            }[]> & {
                paging: {
                    page: number;
                    total: number;
                    perPage: number;
                };
            }>;
        };
    };
};

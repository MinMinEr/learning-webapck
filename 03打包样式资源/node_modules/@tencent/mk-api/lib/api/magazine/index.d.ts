interface NoteFormInterface {
    description: string;
    sourceId: number;
    sourceType: string;
}
export declare const MkMagazineApi: {
    getNotes: ((magazineId: number) => Promise<import("axios").AxiosResponse<{
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        source: string;
        sticked: boolean;
        id: number;
        parentId: number;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number) => Promise<import("axios").AxiosResponse<{
                author: {
                    title: string;
                    post: string;
                    id: number;
                    name: string;
                    curStar: boolean;
                    avatar: string;
                    username: string;
                    sex: string;
                    bg: string;
                    org: string;
                    anonymous: boolean;
                    createdAt: string;
                    stats: {
                        score: number;
                        scoreLevel: string;
                    };
                };
                source: string;
                sticked: boolean;
                id: number;
                parentId: number;
                userId: number;
                username: string;
                createdAt: number;
                updatedAt: number;
                linkableId: number;
                linkableType: string;
                rootableId: number;
                rootableType: string;
                content: string;
                contentMd: string;
                agreeCount: number;
                agreeUsernames: string;
            }>>;
        };
    };
    createNote: ((magazineId: number, body: NoteFormInterface) => Promise<import("axios").AxiosResponse<{
        id: number;
        parentId: number;
        source: string;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, body: NoteFormInterface) => Promise<import("axios").AxiosResponse<{
                id: number;
                parentId: number;
                source: string;
                userId: number;
                username: string;
                createdAt: number;
                updatedAt: number;
                linkableId: number;
                linkableType: string;
                rootableId: number;
                rootableType: string;
                content: string;
                contentMd: string;
                agreeCount: number;
                agreeUsernames: string;
            }>>;
        };
    };
    updateNote: ((magazineId: number, noteId: number, body: NoteFormInterface) => Promise<import("axios").AxiosResponse<{
        id: number;
        parentId: number;
        source: string;
        userId: number;
        username: string;
        createdAt: number;
        updatedAt: number;
        linkableId: number;
        linkableType: string;
        rootableId: number;
        rootableType: string;
        content: string;
        contentMd: string;
        agreeCount: number;
        agreeUsernames: string;
    }>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, noteId: number, body: NoteFormInterface) => Promise<import("axios").AxiosResponse<{
                id: number;
                parentId: number;
                source: string;
                userId: number;
                username: string;
                createdAt: number;
                updatedAt: number;
                linkableId: number;
                linkableType: string;
                rootableId: number;
                rootableType: string;
                content: string;
                contentMd: string;
                agreeCount: number;
                agreeUsernames: string;
            }>>;
        };
    };
    deleteNote: ((magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>;
        };
    };
    agreeNote: ((magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>;
        };
    };
    disagreeNote: ((magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, noteId: number) => Promise<import("axios").AxiosResponse<any>>;
        };
    };
    stickNote: ((magazineId: number, noteId: number, params: {
        stick: boolean;
    }) => Promise<import("axios").AxiosResponse<any>>) & {
        config(config: import("axios").AxiosRequestConfig | ((config: import("axios").AxiosRequestConfig) => import("axios").AxiosRequestConfig) | null): {
            run: (magazineId: number, noteId: number, params: {
                stick: boolean;
            }) => Promise<import("axios").AxiosResponse<any>>;
        };
    };
};
export {};

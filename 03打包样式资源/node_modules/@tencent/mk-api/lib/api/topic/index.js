var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { HttpBaseConfig, injectDefaultParams } from '../../base';
import { TopicBaseHttp, TopicHttp, TopicAdvertHttp } from './types';
import { injectAPIGroup } from '../../inject';
const ApiPrefix = '/activity/hot_topics';
export const MkTopicApi = injectAPIGroup({
    /**
     * 获取专题列表, 从广告接口获取
     *
     * @param {({ groupType?: TopicType, type?: 'problem' | 'banner' } & PaginationParams)} [params={}]
     * @returns
     */
    getTopicList(params = {}) {
        const { groupType } = params, rst = __rest(params, ["groupType"]);
        return TopicBaseHttp.list().get(`${ApiPrefix}/search`, {
            params: injectDefaultParams(Object.assign({ group_type: groupType }, rst)),
        });
    },
    /**
     * 获取专题详情
     * @param {number} id
     * @returns
     */
    getById(id) {
        return TopicHttp.get(`${ApiPrefix}/${id}`);
    },
    /**
     * 获取最新专题详情
     *
     * @param {{ offset?: Number }} [{ offset }={}]
     * @returns
     */
    getNewest({ offset } = {}) {
        return TopicHttp.get(`${ApiPrefix}/newest`, {
            params: {
                offset: offset || HttpBaseConfig.DEFAULT_PAGE_NO,
            },
        });
    },
    /**
     * 获取首页专题广告
     * @returns
     */
    getTopicAdvert() {
        return TopicAdvertHttp.list().get('/posters/10/position', {
            params: {
                position: 111,
                group_by: 10,
                status: 'active',
            },
        });
    },
    /**
     * 获取过去两期的专题
     *
     * @param {number} id
     * @returns
     */
    getNearList(id) {
        return TopicBaseHttp.get(`${ApiPrefix}/${id}/next_2`);
    },
});

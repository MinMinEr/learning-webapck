export declare const TopicBase: {
    id: number;
    type: string;
    banner: string;
    url: string;
    title: string;
    readCount: number;
    createdAt: number;
    updatedAt: number;
};
export declare const TopicBaseHttp: import("../../http").TypeHTTP<{
    id: number;
    type: string;
    banner: string;
    url: string;
    title: string;
    readCount: number;
    createdAt: number;
    updatedAt: number;
}>;
export declare const Topic: {
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
        answers?: {
            id: number;
            createdAt: number;
            agreeCount: number;
            updatedAt: number;
            contentMd: string;
            agreeUsernames: string;
            problemId: number;
            accepted: boolean;
            noteCount: number;
            imageField: string;
            videoField: string;
            contentPlain: string;
            author: {
                title: string;
                post: string;
                id: number;
                name: string;
                curStar: boolean;
                avatar: string;
                username: string;
                sex: string;
                bg: string;
                org: string;
                anonymous: boolean;
                createdAt: string;
                stats: {
                    score: number;
                    scoreLevel: string;
                };
            };
        }[] | undefined;
    }[];
    status: boolean;
    id: number;
    type: string;
    banner: string;
    url: string;
    title: string;
    readCount: number;
    createdAt: number;
    updatedAt: number;
};
export declare const TopicHttp: import("../../http").TypeHTTP<{
    related: {
        title: string;
        id: number;
        coteries: {
            id: number;
            name: string;
            stats: {
                ideaCount: number;
                problemCount: number;
                memberCount: number;
                lastWeekWeight: number;
                lastWeekRanking: number;
                lastWeekPv: number;
                pv: number;
            };
            avatar: string;
        }[];
        type: string;
        createdAt: number;
        answerCount: number;
        agreeCount: number;
        updatedAt: number;
        titleMd: string;
        agreeUsernames: string;
        likeCount: number;
        author: {
            title: string;
            post: string;
            id: number;
            name: string;
            curStar: boolean;
            avatar: string;
            username: string;
            sex: string;
            bg: string;
            org: string;
            anonymous: boolean;
            createdAt: string;
            stats: {
                score: number;
                scoreLevel: string;
            };
        };
        readCount: number;
        imageField: string;
        videoField: string;
        tags: {
            id: number;
            name: string;
        }[];
        starCount: number;
        resolved: boolean;
        replyType: string;
        answers?: {
            id: number;
            createdAt: number;
            agreeCount: number;
            updatedAt: number;
            contentMd: string;
            agreeUsernames: string;
            problemId: number;
            accepted: boolean;
            noteCount: number;
            imageField: string;
            videoField: string;
            contentPlain: string;
            author: {
                title: string;
                post: string;
                id: number;
                name: string;
                curStar: boolean;
                avatar: string;
                username: string;
                sex: string;
                bg: string;
                org: string;
                anonymous: boolean;
                createdAt: string;
                stats: {
                    score: number;
                    scoreLevel: string;
                };
            };
        }[] | undefined;
    }[];
    status: boolean;
    id: number;
    type: string;
    banner: string;
    url: string;
    title: string;
    readCount: number;
    createdAt: number;
    updatedAt: number;
}>;
export declare const TopicAdvert: {
    related?: {
        id: number;
        type: string;
        banner: string;
        url: string;
        title: string;
        readCount: number;
        createdAt: number;
        updatedAt: number;
    } | undefined;
    id: string;
    type: string;
    url: string;
    title: string;
    banner: string;
    data1: string;
    data2: string;
    createdAt: string;
};
export declare const TopicAdvertHttp: import("../../http").TypeHTTP<{
    related?: {
        id: number;
        type: string;
        banner: string;
        url: string;
        title: string;
        readCount: number;
        createdAt: number;
        updatedAt: number;
    } | undefined;
    id: string;
    type: string;
    url: string;
    title: string;
    banner: string;
    data1: string;
    data2: string;
    createdAt: string;
}>;

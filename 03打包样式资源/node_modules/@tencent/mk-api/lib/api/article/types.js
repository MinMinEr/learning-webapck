import { BooleanDTO, NumberDTO, StringDTO, BaseTime, BaseUser, Linkable, KV, } from '../../define/base';
import { extend, pick, omit, constant } from '../../define/helper';
import { UserShortInfo, UserStats } from '../user/types';
import { CoterieBase } from '../coteries/baseType';
import { ActivityBase } from '../activity/baseType';
import { TypeWrapper } from '../../http';
import { NewNote } from '../../define/note';
export const ArticleBase = extend({
    id: NumberDTO,
    uuid: NumberDTO,
    coterieId: NumberDTO,
    coterieName: NumberDTO,
    contestId: NumberDTO,
    contestName: NumberDTO,
    title: StringDTO,
    readCount: NumberDTO,
    starCount: NumberDTO,
    likeCount: NumberDTO,
    noteCount: NumberDTO,
    detail: StringDTO,
    detailMd: StringDTO,
    likeUsers: StringDTO,
    data: StringDTO,
    imageField: StringDTO,
    sticked: BooleanDTO,
    selected: BooleanDTO,
    visibility: constant(5, 10),
    author: extend(UserShortInfo, {
        stats: pick(UserStats, ['score', 'scoreLevel', 'agreeCount', 'answerCount', 'problemCount', 'articleCount']),
    }),
    tags: [KV],
}, BaseTime, BaseUser);
export const ArticleBaseHTTP = TypeWrapper(ArticleBase);
// 文章草稿
export const ArticleDraft = pick(ArticleBase, ['title', 'id', 'createdAt']);
export const ArticleDraftHTTP = TypeWrapper(ArticleDraft);
export const Article = extend(ArticleBase, {
    curStar: BooleanDTO,
    coteries: [pick(CoterieBase, ['avatar', 'id', 'name', 'stats'])],
    activity: pick(ActivityBase, ['id', 'name', 'status']),
    articleLinks: [
        extend(Linkable, {
            type: StringDTO,
        }),
    ],
    watermarked: BooleanDTO,
});
export const ArticleDetailHTTP = TypeWrapper(Article);
// 文章列表, 不带详情
export const ArticleList = pick(Article, [
    'id',
    'uuid',
    'title',
    'author',
    'updatedAt',
    'createdAt',
    'coterieId',
    'coterieName',
    'contestId',
    'contestName',
    'readCount',
    'noteCount',
    'starCount',
    'likeCount',
    'sticked',
    'likeUsers',
    'visibility',
    'imageField',
    'tags',
]);
export const ArticleListHTTP = TypeWrapper(ArticleList);
// 文章列表, 带详情
export const ArticleListWithDetail = extend(ArticleList, {
    detailMd: StringDTO,
    detail: StringDTO,
});
export const ArticleListWithDetailHTTP = TypeWrapper(ArticleListWithDetail);
// 文章 + 评论
// 类似问题+问答
export const ArticleWithNote = {
    article: pick(ArticleBase, ['id', 'title', 'visibility']),
    note: extend(omit(NewNote, ['author']), {
        contentPlain: StringDTO,
    }),
};
export const ArticleWithNoteHttp = TypeWrapper(ArticleWithNote);
// 用户发布笔记的相关统计
export const UserArticleStats = {
    articleCount: NumberDTO,
    tagCount: NumberDTO,
    articleDays: NumberDTO,
    privateCount: NumberDTO,
    publicCount: NumberDTO,
};
export const UserArticleStatsHttp = TypeWrapper(UserArticleStats);

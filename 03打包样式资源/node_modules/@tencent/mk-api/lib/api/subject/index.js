var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { SubjectBaseHttp, SubjectHttp, SubjectAdvertHttp } from './types';
import { injectDefaultParams } from '../../base';
import { IdeaWithSubjectStickedHttp } from '../idea/types';
import { Http } from '../../http';
import { injectAPIGroup } from '../../inject';
export const MkSubjectApi = injectAPIGroup({
    /**
     * 根据id获取话题详情
     *
     * @param {number} id
     * @returns
     */
    getById(id) {
        return SubjectHttp.get(`/subject/${id}`);
    },
    /**
     * 搜索话题
     *
     * @param {(FullPaginationParams & {
     *       statsTotal?: boolean
     *     })} [params]
     * @returns
     */
    search(params) {
        return SubjectBaseHttp.list().get('/subject/search', {
            params: injectDefaultParams(params),
        });
    },
    /**
     * 获取热门话题
     *
     * @param {(PaginationParams & { statsTotal: boolean, afterAt: string})} params
     * @returns
     */
    getHot(params) {
        const { afterAt } = params, rst = __rest(params, ["afterAt"]);
        return SubjectBaseHttp.list().get('/subject/search/hot', {
            params: injectDefaultParams(Object.assign({ statsTotal: false, after_at: afterAt }, rst)),
        });
    },
    /**
     * 获取推荐话题（动态广场二级导航）
     *
     * @returns
     */
    getRecommend() {
        return SubjectBaseHttp.list().get('/subject/recommend');
    },
    /**
     * 获取话题下的想法列表
     *
     * @param {number} id
     * @param {(FullPaginationParams & { activityId: number })} [params]
     * @returns
     */
    getIdeas(id, params) {
        const _a = params || {}, { activityId } = _a, rst = __rest(_a, ["activityId"]);
        return IdeaWithSubjectStickedHttp.list().get(`/subject/${id}/ideas`, {
            params: injectDefaultParams(Object.assign({ activity_id: activityId }, rst)),
        });
    },
    /**
     * 关注话题
     *
     * @param {number} id
     * @returns
     */
    star(id) {
        return Http.post(`/subject/${id}/star`);
    },
    /**
     * 取消话题关注
     *
     * @param {number} id
     * @returns
     */
    unstar(id) {
        return Http.delete(`/subject/${id}/star`);
    },
    /**
     * 获取有奖话题广告（话题广场右侧）
     *
     * @returns
     */
    getRewardSubjectAd() {
        return SubjectAdvertHttp.list().get('/posters/50/position', {
            params: {
                status: 'active',
                position: 503,
                group_by: 50,
            },
        });
    },
    /**
     * 获首页话题广告
     *
     * @returns
     */
    getHomeSubjectAd() {
        return SubjectAdvertHttp.list().get('/posters/10/position', {
            params: {
                status: 'active',
                position: 105,
                group_by: 10,
            },
        });
    },
    /**
     * 获取【大家在讨论】板块话题
     *
     * @returns
     */
    getDiscussSubjectAd() {
        return SubjectAdvertHttp.list().get('/posters/50/position', {
            params: {
                status: 'active',
                position: 504,
                group_by: 50,
            },
        });
    },
    /**
     * 话题详情页内置顶动态
     *
     * @param {number} subjectId
     * @param {number} ideaId
     * @param {{ stick: boolean }} param
     *
     * @returns
     */
    setIdeaStick(subjectId, ideaId, { stick }) {
        return Http.post(`/subject/${subjectId}/idea/${ideaId}/stick`, null, {
            params: {
                stick,
            },
        });
    },
});

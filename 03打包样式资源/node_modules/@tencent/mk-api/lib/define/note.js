import { BaseTime, Rootable, Linkable, Content, NumberDTO, BaseUser, Agree, StringDTO, } from './base';
import { TypeWrapper } from '../http';
import { extend, omit } from './helper';
import { UserShortInfo } from '../api/user/types';
export const NoteBase = extend({
    id: NumberDTO,
    parentId: NumberDTO,
    source: StringDTO,
}, BaseUser, BaseTime, Linkable, Rootable, Content, Agree);
export const NoteBaseHttp = TypeWrapper(NoteBase);
// 新的评论模型
// 目前在article和activity使用到
export const NewNote = extend({
    likeCount: NumberDTO,
    likeUsers: StringDTO,
    author: UserShortInfo,
}, omit(NoteBase, ['agreeCount', 'agreeUsernames', 'source']));
export const NewNoteHTTP = TypeWrapper(NewNote);
// 评论+评论回复模型
export const NoteWithReply = {
    note: NewNote,
    children: [NewNote],
};
export const NoteWithReplyHTTP = TypeWrapper(NoteWithReply);

import { AxiosRequestConfig } from 'axios';
declare type InjectConfig = AxiosRequestConfig | ((config: AxiosRequestConfig) => AxiosRequestConfig) | null;
/**
 * 获取injectConfig
 *
 * @export
 * @returns
 */
export declare function getInject(): InjectConfig;
/**
 * 重置injectConfig
 *
 * @export
 */
export declare function resetInject(): void;
declare type APIFunction = (...args: any) => any;
declare type InjectAPI<T extends APIFunction> = T & {
    config(config: InjectConfig): {
        run: T;
    };
};
/**
 * 将api改成可配置形式
 * @export
 * @template T
 * @param {T} api
 * @returns {InjectAPI<T>}
 */
export declare function injectAPI<T extends APIFunction>(api: T): InjectAPI<T>;
declare type InjectAPIGroup<T extends Record<string, APIFunction>> = {
    [k in keyof T]: InjectAPI<T[k]>;
};
/**
 * 将APIGroup中所有api改成可配置形式
 *
 * @export
 * @template T
 * @param {T} group
 * @returns {InjectAPIGroup<T>}
 */
export declare function injectAPIGroup<T extends Record<string, APIFunction>>(group: T): InjectAPIGroup<T>;
export {};
